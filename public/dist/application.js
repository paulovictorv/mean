"use strict";var ApplicationConfiguration=function(){var e="mean",t=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils"],i=function(t,i){angular.module(t,i||[]),angular.module(e).requires.push(t)};return{applicationModuleName:e,applicationModuleVendorDependencies:t,registerModule:i}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function(e){e.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(e){e.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),e.addSubMenuItem("topbar","articles","List Articles","articles"),e.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function(e){e.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function(e,t,i,n,s){e.authentication=n,e.create=function(){var t=new s({title:this.title,content:this.content});t.$save(function(t){i.path("articles/"+t._id),e.title="",e.content=""},function(t){e.error=t.data.message})},e.remove=function(t){if(t){t.$remove();for(var n in e.articles)e.articles[n]===t&&e.articles.splice(n,1)}else e.article.$remove(function(){i.path("articles")})},e.update=function(){var t=e.article;t.$update(function(){i.path("articles/"+t._id)},function(t){e.error=t.data.message})},e.find=function(){e.articles=s.query()},e.findOne=function(){e.article=s.get({articleId:t.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function(e){return e("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),function(){describe("ArticlesController",function(){var e,t,i,n,s;beforeEach(function(){jasmine.addMatchers({toEqualData:function(){return{compare:function(e,t){return{pass:angular.equals(e,t)}}}}})}),beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function(r,o,a,u,c){t=o.$new(),n=u,i=c,s=a,e=r("ArticlesController",{$scope:t})})),it("$scope.find() should create an array with at least one article object fetched from XHR",inject(function(e){var n=new e({title:"An Article about MEAN",content:"MEAN rocks!"}),s=[n];i.expectGET("articles").respond(s),t.find(),i.flush(),expect(t.articles).toEqualData(s)})),it("$scope.findOne() should create an array with one article object fetched from XHR using a articleId URL parameter",inject(function(e){var s=new e({title:"An Article about MEAN",content:"MEAN rocks!"});n.articleId="525a8422f6d0f87f0e407a33",i.expectGET(/articles\/([0-9a-fA-F]{24})$/).respond(s),t.findOne(),i.flush(),expect(t.article).toEqualData(s)})),it("$scope.create() with valid form data should send a POST request with the form input values and then locate to new object URL",inject(function(e){var n=new e({title:"An Article about MEAN",content:"MEAN rocks!"}),r=new e({_id:"525cf20451979dea2c000001",title:"An Article about MEAN",content:"MEAN rocks!"});t.title="An Article about MEAN",t.content="MEAN rocks!",i.expectPOST("articles",n).respond(r),t.create(),i.flush(),expect(t.title).toEqual(""),expect(t.content).toEqual(""),expect(s.path()).toBe("/articles/"+r._id)})),it("$scope.update() should update a valid article",inject(function(e){var n=new e({_id:"525cf20451979dea2c000001",title:"An Article about MEAN",content:"MEAN Rocks!"});t.article=n,i.expectPUT(/articles\/([0-9a-fA-F]{24})$/).respond(),t.update(),i.flush(),expect(s.path()).toBe("/articles/"+n._id)})),it("$scope.remove() should send a DELETE request with a valid articleId and remove the article from the scope",inject(function(e){var n=new e({_id:"525a8422f6d0f87f0e407a33"});t.articles=[n],i.expectDELETE(/articles\/([0-9a-fA-F]{24})$/).respond(204),t.remove(n),i.flush(),expect(t.articles.length).toBe(0)}))})}(),angular.module("core").config(["$stateProvider","$urlRouterProvider",function(e,t){t.otherwise("/"),e.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function(e,t,i){e.authentication=t,e.isCollapsed=!1,e.menu=i.getMenu("topbar"),e.toggleCollapsibleMenu=function(){e.isCollapsed=!e.isCollapsed},e.$on("$stateChangeSuccess",function(){e.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function(e,t){e.authentication=t}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var e=function(e){if(!e)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var t in e.roles)for(var i in this.roles)if(this.roles[i]===e.roles[t])return!0;return!1};this.validateMenuExistance=function(e){if(e&&e.length){if(this.menus[e])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(e){return this.validateMenuExistance(e),this.menus[e]},this.addMenu=function(t,i,n){return this.menus[t]={isPublic:i||!1,roles:n||this.defaultRoles,items:[],shouldRender:e},this.menus[t]},this.removeMenu=function(e){this.validateMenuExistance(e),delete this.menus[e]},this.addMenuItem=function(t,i,n,s,r,o,a,u){return this.validateMenuExistance(t),this.menus[t].items.push({title:i,link:n,menuItemType:s||"item",menuItemClass:s,uiRoute:r||"/"+n,isPublic:null===o||"undefined"==typeof o?this.menus[t].isPublic:o,roles:null===a||"undefined"==typeof a?this.menus[t].roles:a,position:u||0,items:[],shouldRender:e}),this.menus[t]},this.addSubMenuItem=function(t,i,n,s,r,o,a,u){this.validateMenuExistance(t);for(var c in this.menus[t].items)this.menus[t].items[c].link===i&&this.menus[t].items[c].items.push({title:n,link:s,uiRoute:r||"/"+s,isPublic:null===o||"undefined"==typeof o?this.menus[t].items[c].isPublic:o,roles:null===a||"undefined"==typeof a?this.menus[t].items[c].roles:a,position:u||0,shouldRender:e});return this.menus[t]},this.removeMenuItem=function(e,t){this.validateMenuExistance(e);for(var i in this.menus[e].items)this.menus[e].items[i].link===t&&this.menus[e].items.splice(i,1);return this.menus[e]},this.removeSubMenuItem=function(e,t){this.validateMenuExistance(e);for(var i in this.menus[e].items)for(var n in this.menus[e].items[i].items)this.menus[e].items[i].items[n].link===t&&this.menus[e].items[i].items.splice(n,1);return this.menus[e]},this.addMenu("topbar")}]),function(){describe("HeaderController",function(){var e,t;beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function(i,n){e=n.$new(),t=i("HeaderController",{$scope:e})})),it("should expose the authentication service",function(){expect(e.authentication).toBeTruthy()})})}(),function(){describe("HomeController",function(){var e,t;beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function(i,n){e=n.$new(),t=i("HomeController",{$scope:e})})),it("should expose the authentication service",function(){expect(e.authentication).toBeTruthy()})})}(),angular.module("users").config(["$httpProvider",function(e){e.interceptors.push(["$q","$location","Authentication",function(e,t,i){return{responseError:function(n){switch(n.status){case 401:i.user=null,t.path("signin");break;case 403:}return e.reject(n)}}}])}]),angular.module("users").config(["$stateProvider",function(e){e.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function(e,t,i,n){e.authentication=n,e.authentication.user&&i.path("/"),e.signup=function(){t.post("/auth/signup",e.credentials).success(function(t){e.authentication.user=t,i.path("/")}).error(function(t){e.error=t.message})},e.signin=function(){t.post("/auth/signin",e.credentials).success(function(t){e.authentication.user=t,i.path("/")}).error(function(t){e.error=t.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function(e,t,i,n,s){e.authentication=s,e.authentication.user&&n.path("/"),e.askForPasswordReset=function(){e.success=e.error=null,i.post("/auth/forgot",e.credentials).success(function(t){e.credentials=null,e.success=t.message}).error(function(t){e.credentials=null,e.error=t.message})},e.resetUserPassword=function(){e.success=e.error=null,i.post("/auth/reset/"+t.token,e.passwordDetails).success(function(t){e.passwordDetails=null,s.user=t,n.path("/password/reset/success")}).error(function(t){e.error=t.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function(e,t,i,n,s){e.user=s.user,e.user||i.path("/"),e.hasConnectedAdditionalSocialAccounts=function(){for(var t in e.user.additionalProvidersData)return!0;return!1},e.isConnectedSocialAccount=function(t){return e.user.provider===t||e.user.additionalProvidersData&&e.user.additionalProvidersData[t]},e.removeUserSocialAccount=function(i){e.success=e.error=null,t.delete("/users/accounts",{params:{provider:i}}).success(function(t){e.success=!0,e.user=s.user=t}).error(function(t){e.error=t.message})},e.updateUserProfile=function(t){if(t){e.success=e.error=null;var i=new n(e.user);i.$update(function(t){e.success=!0,s.user=t},function(t){e.error=t.data.message})}else e.submitted=!0},e.changeUserPassword=function(){e.success=e.error=null,t.post("/users/password",e.passwordDetails).success(function(){e.success=!0,e.passwordDetails=null}).error(function(t){e.error=t.message})}}]),angular.module("users").factory("Authentication",[function(){var e=this;return e._data={user:window.user},e._data}]),angular.module("users").factory("Users",["$resource",function(e){return e("users",{},{update:{method:"PUT"}})}]),function(){describe("AuthenticationController",function(){var e,t,i,n,s;beforeEach(function(){jasmine.addMatchers({toEqualData:function(){return{compare:function(e,t){return{pass:angular.equals(e,t)}}}}})}),beforeEach(module(ApplicationConfiguration.applicationModuleName)),beforeEach(inject(function(r,o,a,u,c){t=o.$new(),n=u,i=c,s=a,e=r("AuthenticationController",{$scope:t})})),it("$scope.signin() should login with a correct user and password",function(){i.when("POST","/auth/signin").respond(200,"Fred"),t.signin(),i.flush(),expect(t.authentication.user).toEqual("Fred"),expect(s.url()).toEqual("/")}),it("$scope.signin() should fail to log in with nothing",function(){i.expectPOST("/auth/signin").respond(400,{message:"Missing credentials"}),t.signin(),i.flush(),expect(t.error).toEqual("Missing credentials")}),it("$scope.signin() should fail to log in with wrong credentials",function(){t.authentication.user="Foo",t.credentials="Bar",i.expectPOST("/auth/signin").respond(400,{message:"Unknown user"}),t.signin(),i.flush(),expect(t.error).toEqual("Unknown user")}),it("$scope.signup() should register with correct data",function(){t.authentication.user="Fred",i.when("POST","/auth/signup").respond(200,"Fred"),t.signup(),i.flush(),expect(t.authentication.user).toBe("Fred"),expect(t.error).toEqual(void 0),expect(s.url()).toBe("/")}),it("$scope.signup() should fail to register with duplicate Username",function(){i.when("POST","/auth/signup").respond(400,{message:"Username already exists"}),t.signup(),i.flush(),expect(t.error).toBe("Username already exists")})})}();